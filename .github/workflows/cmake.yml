name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      LD_RUN_PATH: /opt/gcc-latest/lib64

    steps:
    - uses: actions/checkout@v2

    - name: Vcpkg - Create build folder
      run: |
        mkdir -p ${{runner.workspace}}/build/vcpkg_installed
        mkdir -p ${{runner.workspace}}/build/_deps

    - name: Latest GCC - Create install folder
      run: mkdir -p ${{runner.workspace}}/gcc-latest

    - name: Load GitHub Cache
      uses: actions/cache@v3
      id: common-cache
      with:
        path: |
          /home/runner/.cache/vcpkg
          ${{runner.workspace}}/build/vcpkg_installed
          ${{runner.workspace}}/build/_deps
          ${{runner.workspace}}/gcc-latest
        key: maze-builder-${{ hashFiles('vcpkg.json') }}-${{ hashFiles('cmake/vcpkg.cmake') }}-2

    - name: Latest GCC - Get deb
      working-directory: ${{runner.workspace}}/gcc-latest
      if: steps.common-cache.outputs.cache-hit != 'true'
      run: wget -q http://kayari.org/gcc-latest/gcc-latest.deb

    - name: Latest GCC - Install deb
      working-directory: ${{runner.workspace}}/gcc-latest
      run: sudo dpkg -i gcc-latest.deb

    - name: Latest GCC - Add to path
      run: echo "/opt/gcc-latest/bin" >> $GITHUB_PATH

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} -VV
